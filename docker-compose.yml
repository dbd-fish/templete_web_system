services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development  # 開発用ステージを指定
    container_name: frontend_container
    image: frontend_container
    deploy:
      resources:
        limits:
          memory: 4G
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules  # node_modulesのマウント除外
    working_dir: /app/frontend
    ports:
      - "3000:3000" # 本番用
      - "5173:5173" # 開発用
    tty: true
    stdin_open: true
    networks:
      - frontend-network
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - VITE_API_URL=http://backend:8000

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend_container
    image: backend_container
    volumes:
      - ./backend:/app/backend
    working_dir: /app/backend
    ports:
      - "8000:8000"  # FastAPI アプリケーション
      - "8001:8001"  # OpenTelemetry Prometheus メトリクス
    tty: true
    stdin_open: true
    depends_on:
      - db
    networks:
      - frontend-network
      - backend-network
    environment:
      - DATABASE_URL=postgresql://template_user:template_password@db:5432/template_db
      - ENVIRONMENT=development
      - CORS_ORIGINS=http://localhost:5173,https://localhost:5173

  db:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_DB: template_db
      POSTGRES_USER: template_user
      POSTGRES_PASSWORD: template_password
      TZ: Asia/Tokyo
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # テスト用のDB構築スクリプト
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - backend-network # バックエンド専用のネットワーク
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U template_user -d template_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Cypress E2E Testing (Cypress公式推奨: run-and-exit パターン)
  cypress:
    build:
      context: ./cypress
      dockerfile: Dockerfile
    container_name: cypress_container
    image: cypress_container
    volumes:
      - ./cypress:/e2e
    depends_on:
      - frontend
      - backend
    networks:
      - frontend-network
    environment:
      - CYPRESS_baseUrl=http://frontend:5173
    # Cypress公式推奨: プロファイル使用でテスト実行時のみ起動
    profiles:
      - test

networks:
  frontend-network:
    driver: bridge # フロントエンドとバックエンドが通信するためのネットワーク
  backend-network:
    driver: bridge # バックエンドとデータベースが通信するためのネットワーク

volumes:
  postgres_data: