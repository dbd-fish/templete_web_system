# 新フロー　未検証
# name: Frontend Tests & Build

# on:
#   pull_request:
#     branches: [ main, develop ]
#     paths:
#       - 'frontend/**'
#       - '.github/workflows/github-actions_frontend.yml'
#   push:
#     branches: [ main, develop ]
#     paths:
#       - 'frontend/**'
#       - '.github/workflows/github-actions_frontend.yml'
#   workflow_dispatch:
#     # 手動でこのワークフローをトリガーします。

# jobs:
#   frontend_tests:
#     name: Frontend Tests & Build
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4
#         # リポジトリのコードをチェックアウトします。

#       - name: Set up Frontend Container
#         run: |
#           docker compose up -d frontend
#           sleep 20
#         # docker-compose.ymlを使用して、frontendコンテナを立ち上げる

#       - name: Check Frontend Container Status
#         run: |
#           docker ps
#           docker exec frontend_container node --version
#           docker exec frontend_container npm --version
#         # 起動中のDockerコンテナとNode.jsの確認

#       - name: Install Dependencies
#         run: |
#           docker exec frontend_container npm install
#         # 依存関係のインストール

#       - name: Run Linting (ESLint)
#         run: |
#           docker exec frontend_container npm run lint
#         # ESLintでコードチェック

#       - name: Run Type Check (TypeScript)
#         run: |
#           docker exec frontend_container npm run type-check
#         # TypeScriptの型チェック

#       - name: Run Unit Tests (Vitest)
#         run: |
#           docker exec frontend_container npm run test
#         # Vitestでユニットテスト実行

#       - name: Build Production
#         run: |
#           docker exec frontend_container npm run build
#         # 本番用ビルド

#       - name: Show Container Logs on Failure
#         if: failure()
#         run: |
#           echo "=== Frontend Container Logs ==="
#           docker logs frontend_container
#         # 失敗時のコンテナログを表示