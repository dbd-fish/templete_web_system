[tool.poetry]
name = "backend"
version = "0.1.0"
description = "FastAPI環境構築用のパッケージ"
authors = ["dbd-fish"]
# readme = "README.md"

[tool.poetry.dependencies]
python = "^3.13"
ruff = "^0.7.2"
pytest = "^8.3.3"
mypy = "^1.13.0"
fastapi = {extras = ["all"], version = "^0.115.5"}
uvicorn = {extras = ["standard"], version = "^0.32.0"}
sqlalchemy = "^2.0.36"
databases = "^0.9.0"
asyncpg = "^0.30.0"
alembic = "^1.14.0"
greenlet = "^3.1.1"
psycopg2 = "^2.9.10"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
bcrypt = "==4.0.1"
pydantic-settings = "^2.6.1"
structlog = "^24.4.0"
rich = "^13.9.4"

pytest-asyncio = "^0.24.0"
types-python-jose = "^3.3.4.20240106"
types-passlib = "^1.7.7.20240819"

[tool.poetry.group.dev.dependencies]
httpx = "^0.27.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
# Pytestの設定
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "session"

[tool.ruff]
# 適用するルールの選択
# 適用するルールの選択
# F: Pyflakesによるエラー検出
# E: pycodestyleのエラー
# W: pycodestyleの警告
# I: isortによるインポート順序の整理
# B: flake8-bugbearによる潜在的なバグ検出
# UP: pyupgradeによる最新のPython構文へのアップグレード
lint.select = ["F", "E", "W", "I", "B", "UP"]

# 除外するルールの指定（必要に応じて）
lint.ignore = ["B008"]

# 自動修正可能なルールの指定
lint.fixable = ["F", "E", "W", "I", "B", "UP"]

# 最大行長の設定
line-length = 200

# インデント幅の設定
indent-width = 4

# 対象とするPythonのバージョン
target-version = "py313"

# 除外するパスの指定
exclude = [
    "**/migrations/**",
    "**/__pycache__/**",
    "alembic/versions/**"
]

[tool.ruff.lint.per-file-ignores]
# ファイルごとのエラー除外
"__init__.py" = ["F401"]

# [tool.poetry.packages]
# include = ["app"]
