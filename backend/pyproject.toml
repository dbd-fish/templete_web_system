[tool.poetry]
name = "backend"
version = "0.1.0"
description = "FastAPI環境構築用のパッケージ"
authors = ["dbd-fish"]
package-mode = false
# readme = "README.md"

[tool.poetry.dependencies]
python = "^3.13"
ruff = "^0.11.13"
pytest = "^8.4.1"
mypy = "^1.16.1"
fastapi = {extras = ["all"], version = "^0.116.0"}
uvicorn = {extras = ["standard"], version = "^0.32.0"}
sqlalchemy = "^2.0.41"
databases = "^0.9.0"
asyncpg = "^0.30.0"
psycopg2-binary = "^2.9.10"
alembic = "^1.14.0"
pyjwt = {extras = ["crypto"], version = "^2.8.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
bcrypt = "==4.0.1"
pydantic-settings = "^2.6.1"
structlog = "^24.4.0"

# OpenTelemetry監視・メトリクス関連
opentelemetry-distro = "^0.50b0"
opentelemetry-api = "^1.29.0"
opentelemetry-sdk = "^1.29.0"
opentelemetry-instrumentation-fastapi = "^0.50b0"
opentelemetry-instrumentation-sqlalchemy = "^0.50b0"
opentelemetry-instrumentation-asyncpg = "^0.50b0"
opentelemetry-instrumentation-logging = "^0.50b0"
opentelemetry-exporter-prometheus = "^0.50b0"
opentelemetry-exporter-otlp = "^1.29.0"
opentelemetry-exporter-otlp-proto-grpc = "^1.29.0"

pytest-asyncio = "^0.24.0"
pytest-cov = "^6.2.1"
types-pyjwt = "^1.7.1"
types-passlib = "^1.7.7.20240819"

[tool.poetry.group.dev.dependencies]
httpx = "^0.27.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
# Pytestの設定
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "session"

[tool.ruff]
# 適用するルールの選択
# F: Pyflakesによるエラー検出
# E: pycodestyleのエラー
# W: pycodestyleの警告
# I: isortによるインポート順序の整理
# B: flake8-bugbearによる潜在的なバグ検出
# UP: pyupgradeによる最新のPython構文へのアップグレード
# COM: カンマ関連のルール（配列・辞書の末尾カンマ）
lint.select = ["F", "E", "W", "I", "B", "UP", "COM"]

# 除外するルールの指定（必要に応じて）
lint.ignore = ["B008"]

# 自動修正可能なルールの指定
lint.fixable = ["F", "E", "W", "I", "B", "UP"]

# 最大行長の設定
line-length = 200

# インデント幅の設定
indent-width = 4

# 対象とするPythonのバージョン
target-version = "py313"

# 除外するパスの指定
exclude = [
    "**/migrations/**",
    "**/__pycache__/**",
    "alembic/versions/**"
]

# フォーマット設定
[tool.ruff.format]
# 文字列の引用符設定（ダブルクォート優先）
quote-style = "double"

# 複数行の関数呼び出しを維持（falseにすると複数行を維持）
skip-magic-trailing-comma = false

# インデントスタイル（スペース使用）
indent-style = "space"

# 行の終端設定（自動検出）
line-ending = "auto"

# docstring のフォーマットを無効化
docstring-code-format = false

# docstring の行長制限を無効化  
docstring-code-line-length = "dynamic"

[tool.ruff.lint.per-file-ignores]
# ファイルごとのエラー除外
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
# isort設定：trailingカンマで分割する
split-on-trailing-comma = true

# [tool.poetry.packages]
# include = ["app"]
